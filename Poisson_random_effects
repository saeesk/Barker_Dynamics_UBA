##############################
#Poisson Random Effects Model
##############################
set.seed(123)
##Cacluate drift 
pois_drift = function(x)
{
  mu = x[1]
  eta = x[2:length(x)]
  #derivative wrt mu
  dU1 = mu/100- sum(eta-mu)  
  
  #derivative wrt eta_i
  dU = J*exp(eta) - rowSums(y) + eta - mu
  
  #derivative of U 
  dU = c(dU1, dU)
  
  return(-1*dU)
}

# 
# ###EM scheme : ULA
ULA = function(x0,dt ,N)
{
  x = matrix(0 ,nrow = N,ncol= (I + 1))
  x[1 , ] = x0
  for( i in 2:N)
  {
    mu = pois_drift(x[(i-1) , ])
    x[i, ] =  x[(i-1), ]+ dt*mu+ sqrt(2*dt)*rnorm(1)
    print(i)
  }
 
  return(x)
}
# 
# ###Skew-Symmetric Scheme : UBA
# ##Calculate the probability function for jumps 
probf = function(y, dt , v )
{
  mu = pois_drift(y)
  temp = -sqrt(2*dt)*v*mu
  #print(v)
  return(1/(1 + exp(temp)))
}
# 
# ##Do the Unadjusted Barker Procedure 
UBA= function(x0,dt,N)
{
  x = matrix(0 ,nrow = N,ncol= (I + 1))
  x[1 , ] = x0
  for( i in 2: N)
  {
    v = rnorm(I+1)
    U = runif(I+1)
    prob = probf(y = x[(i-1), ], dt = dt , v = v)
    b = ifelse(U<= prob , 1, -1)
    x[i , ] = x[(i-1) , ] + sqrt(2*dt)*b*v
  }
  return(x)
}

# ###############
# ###############
# #Experiments
# ###Data generation 
#Fixed start 
#mustar = 5
#warm start
mustar = rnorm(1, mean = 5, sd = 10)
I =50
J = 5
sigma_mu = 10
eta = rnorm(n = I , mean = mustar,sd = 1)
y = matrix(nrow = I , ncol = J)
for(i in 1 :I)
{
  y[i ,] = rpois(n = J , lambda = exp(eta[i]) )
}

##Initialize
x0 = c(mustar,eta)
foo = 1:1e4

timesteps =seq(from = 0.005 , to = 0.05 , by = 0.005)
err_mat = matrix(nrow = length(timesteps), ncol = 2)
for( i in 1 : length(timesteps))
{
  r1= ULA(x0,  dt = timesteps[i], N = 5e6)
  r2 = UBA(x0,  dt = timesteps[i], N = 6e4)
  ULA_mu = na.omit(r1[,1])
  UBA_mu = r2[-foo,1]
  errL = sum((ULA_mu-mustar)^2)/5e6
  errB = sum((UBA_mu-mustar)^2)/5e4
  err_mat[i, ]= c(errL,errB)
  print(paste('Timestep number', i , 'done!'))

}
pdf('warm_start.pdf')
#For fixed start
#plot(timesteps , err_mat[,1], type = 'o' , ylab = 'mean sqaured error', main = 'Fixed Start')
#For warm start  /
plot(timesteps , err_mat[,1], type = 'o' , ylab = 'mean sqaured error', main = 'Warm Start', ylim = c(0, 6e20))
lines(timesteps , err_mat[ ,2], col = 'red' , type = 'o')
legend('topright' , legend = c('ULA' , 'UBA') , col = c('black' , 'red') ,lty = 1 )
dev.off()
#

m1 = ULA(x0,dt = 0.005 , N = 5e6)
plot(density(na.rm(m1[ ,1])))
